<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="a3c7e2ed-d56b-4bc1-b0e9-d3e9a92b986c" name="Default" comment="">
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/ext/win32/ia32/bson.node" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/ext/win32/x64/bson.node" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/tools/jasmine-1.1.0/jasmine_favicon.png" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/node_modules/nan/.dntrc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/utf8/.gitattributes" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/utf8/.gitattributes" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/ms/.gitignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/node_modules/tinycolor/.gitignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/node_modules/emitter/.gitignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/has-cors/node_modules/global/.gitignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/node_modules/tinycolor/.gitignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/node_modules/emitter/.gitignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/qs/.gitmodules" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/qs/.gitmodules" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/node_modules/json3/.gitmodules" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/node_modules/json3/.gitmodules" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/node_modules/nan/.index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/node_modules/nan/.index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/node_modules/json3/.jamignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/node_modules/json3/.jamignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/.jshintrc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/debug/.jshintrc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpromise/.idea/.name" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/node_modules/string_decoder/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/stream-counter/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/qs/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/type-is/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/type-is/node_modules/media-typer/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/type-is/node_modules/mime-types/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/accepts/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/accepts/node_modules/mime-types/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/accepts/node_modules/negotiator/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/buffer-crc32/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/cookie/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/cookie-signature/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/debug/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/debug/node_modules/ms/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/depd/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/escape-html/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/finalhandler/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/fresh/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/media-typer/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/merge-descriptors/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/methods/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/parseurl/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/path-to-regexp/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/proxy-addr/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/proxy-addr/node_modules/ipaddr.js/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/qs/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/range-parser/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/node_modules/finished/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/node_modules/finished/node_modules/ee-first/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/node_modules/ms/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/serve-static/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/type-is/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/type-is/node_modules/mime-types/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/vary/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/hooks/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/node_modules/string_decoder/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpath/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpromise/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mquery/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/muri/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/regexp-clone/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/sliced/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/base64id/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/debug/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/after/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/arraybuffer.slice/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/base64-arraybuffer/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/blob/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/utf8/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/examples/fileapi/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/node_modules/commander/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/node_modules/options/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/has-binary-data/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/node_modules/json3/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/component-bind/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/component-emitter/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/component-inherit/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/after/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/arraybuffer.slice/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/base64-arraybuffer/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/blob/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/utf8/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/has-cors/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parsejson/node_modules/better-assert/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parsejson/node_modules/better-assert/node_modules/callsite/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parseqs/node_modules/better-assert/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parseqs/node_modules/better-assert/node_modules/callsite/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/examples/fileapi/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/node_modules/commander/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/node_modules/options/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/indexof/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/object-component/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/parseuri/node_modules/better-assert/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/parseuri/node_modules/better-assert/node_modules/callsite/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/to-array/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/node_modules/json3/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/type-is/node_modules/mime-types/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/accepts/node_modules/mime-types/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/buffer-crc32/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/type-is/node_modules/mime-types/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/utils-merge/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpath/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpromise/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mquery/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/muri/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/regexp-clone/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/sliced/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/after/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/base64-arraybuffer/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/utf8/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/node_modules/commander/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/node_modules/json3/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/component-emitter/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/after/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/base64-arraybuffer/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/utf8/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/node_modules/commander/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/node_modules/json3/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/.zuul.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/blob/.zuul.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/.zuul.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/.zuul.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/.zuul.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/.zuul.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/blob/.zuul.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/.zuul.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/lib/BufferPool.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/lib/BufferPool.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/test/BufferPool.test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/test/BufferPool.test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/lib/BufferUtil.fallback.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/lib/BufferUtil.fallback.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/lib/BufferUtil.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/lib/BufferUtil.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/CHANGELOG.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/CHANGELOG.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/CONTRIBUTING.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/CONTRIBUTING.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/proxy-addr/node_modules/ipaddr.js/Cakefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/lib/ErrorCodes.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/lib/ErrorCodes.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/utf8/Gruntfile.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/utf8/Gruntfile.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/type-is/HISTORY.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/type-is/node_modules/media-typer/HISTORY.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/finalhandler/HISTORY.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/media-typer/HISTORY.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/parseurl/HISTORY.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/node_modules/finished/HISTORY.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/type-is/HISTORY.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/accepts/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/cookie-signature/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/debug/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/depd/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/fresh/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/methods/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/path-to-regexp/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/proxy-addr/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/range-parser/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/serve-static/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/vary/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpath/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpromise/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mquery/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/muri/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/regexp-clone/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/sliced/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/debug/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/node_modules/commander/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/node_modules/emitter/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/component-bind/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/component-emitter/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/component-inherit/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/has-cors/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/has-cors/node_modules/global/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parsejson/node_modules/better-assert/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parsejson/node_modules/better-assert/node_modules/callsite/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parseqs/node_modules/better-assert/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parseqs/node_modules/better-assert/node_modules/callsite/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/node_modules/commander/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/object-component/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/parseuri/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/parseuri/node_modules/better-assert/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/parseuri/node_modules/better-assert/node_modules/callsite/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/node_modules/emitter/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/after/LICENCE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/after/LICENCE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/to-array/LICENCE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/utf8/LICENSE-GPL.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/utf8/LICENSE-GPL.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/utf8/LICENSE-MIT.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/utf8/LICENSE-MIT.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/base64-arraybuffer/LICENSE-MIT" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/base64-arraybuffer/LICENSE-MIT" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/node_modules/inherits/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/node_modules/string_decoder/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/type-is/node_modules/mime-types/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/accepts/node_modules/mime-types/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/accepts/node_modules/negotiator/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/buffer-crc32/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/cookie/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/depd/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/methods/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/proxy-addr/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/proxy-addr/node_modules/ipaddr.js/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/node_modules/finished/node_modules/ee-first/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/node_modules/mime/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/serve-static/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/type-is/node_modules/mime-types/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/utils-merge/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/vary/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/node_modules/nan/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/node_modules/inherits/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/node_modules/string_decoder/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpath/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpromise/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mquery/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/muri/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/regexp-clone/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/sliced/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/node_modules/nan/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/has-binary-data/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/node_modules/json3/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/node_modules/nan/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/xmlhttprequest/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/node_modules/json3/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/tools/jasmine-1.1.0/MIT.LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/type-is/node_modules/mime-types/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/accepts/node_modules/mime-types/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/cookie-signature/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/debug/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/escape-html/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/fresh/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/range-parser/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/type-is/node_modules/mime-types/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/hooks/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/ext/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpath/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mquery/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/ms/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/muri/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/regexp-clone/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/sliced/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/debug/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/arraybuffer.slice/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/blob/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/node_modules/commander/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/node_modules/options/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/has-binary-data/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/node_modules/emitter/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/component-bind/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/component-emitter/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/component-inherit/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/arraybuffer.slice/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/blob/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/has-cors/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/has-cors/node_modules/global/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parsejson/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parsejson/node_modules/better-assert/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parsejson/node_modules/better-assert/node_modules/callsite/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parseqs/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parseqs/node_modules/better-assert/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parseqs/node_modules/better-assert/node_modules/callsite/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/node_modules/commander/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/node_modules/options/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/indexof/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/object-component/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/parseuri/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/parseuri/node_modules/better-assert/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/parseuri/node_modules/better-assert/node_modules/callsite/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/node_modules/emitter/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpromise/.idea/libraries/Node_js_Dependencies_for_mpromise.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpromise/.idea/inspectionProfiles/Project_Default.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/node_modules/core-util-is/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/node_modules/inherits/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/node_modules/isarray/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/node_modules/string_decoder/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/stream-counter/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/type-is/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/type-is/node_modules/media-typer/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/type-is/node_modules/mime-types/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/accepts/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/accepts/node_modules/mime-types/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/buffer-crc32/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/cookie/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/debug/node_modules/ms/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/finalhandler/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/media-typer/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/merge-descriptors/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/parseurl/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/proxy-addr/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/proxy-addr/node_modules/ipaddr.js/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/node_modules/finished/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/node_modules/finished/node_modules/ee-first/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/node_modules/mime/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/node_modules/ms/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/type-is/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/type-is/node_modules/mime-types/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/utils-merge/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/vary/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/express/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/express/connection-sharing/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/hooks/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/node_modules/nan/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/node_modules/core-util-is/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/node_modules/inherits/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/node_modules/isarray/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/node_modules/string_decoder/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpath/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpromise/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mquery/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/ms/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/muri/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/regexp-clone/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/sliced/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/base64id/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/after/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/arraybuffer.slice/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/base64-arraybuffer/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/blob/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/utf8/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/node_modules/nan/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/node_modules/options/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/node_modules/tinycolor/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/has-binary-data/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/has-binary-data/node_modules/isarray/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/node_modules/isarray/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/node_modules/json3/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/after/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/arraybuffer.slice/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/base64-arraybuffer/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/blob/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/utf8/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/node_modules/nan/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/node_modules/options/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/node_modules/tinycolor/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/xmlhttprequest/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/to-array/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/node_modules/isarray/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/node_modules/json3/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/qs/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/cookie-signature/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/debug/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/depd/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/escape-html/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/fresh/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/methods/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/path-to-regexp/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/qs/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/range-parser/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/serve-static/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mquery/node_modules/debug/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/debug/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/debug/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/node_modules/commander/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/node_modules/emitter/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/component-bind/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/component-emitter/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/component-inherit/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/has-cors/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/has-cors/node_modules/global/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parsejson/node_modules/better-assert/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parsejson/node_modules/better-assert/node_modules/callsite/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parseqs/node_modules/better-assert/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parseqs/node_modules/better-assert/node_modules/callsite/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/node_modules/commander/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/indexof/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/object-component/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/parseuri/node_modules/better-assert/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/parseuri/node_modules/better-assert/node_modules/callsite/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/node_modules/emitter/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/lib/Receiver.hixie.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/lib/Receiver.hixie.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/test/Receiver.hixie.test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/test/Receiver.hixie.test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/lib/Receiver.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/lib/Receiver.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/test/Receiver.test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/test/Receiver.test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/type-is/node_modules/mime-types/SOURCES.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/accepts/node_modules/mime-types/SOURCES.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/type-is/node_modules/mime-types/SOURCES.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/drivers/SPEC.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/lib/Sender.hixie.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/lib/Sender.hixie.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/test/Sender.hixie.test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/test/Sender.hixie.test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/lib/Sender.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/lib/Sender.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/test/Sender.test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/test/Sender.test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/lib/Validation.fallback.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/lib/Validation.fallback.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/lib/Validation.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/lib/Validation.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/test/Validation.test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/test/Validation.test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/test/WebSocket.integration.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/test/WebSocket.integration.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/lib/WebSocket.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/lib/WebSocket.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/test/WebSocket.test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/test/WebSocket.test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/lib/WebSocketServer.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/lib/WebSocketServer.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/test/WebSocketServer.test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/test/WebSocketServer.test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/xmlhttprequest/lib/XMLHttpRequest.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/lib/_stream_duplex.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/lib/_stream_duplex.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/lib/_stream_passthrough.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/lib/_stream_passthrough.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/lib/_stream_readable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/lib/_stream_readable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/lib/_stream_transform.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/lib/_stream_transform.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/lib/_stream_writable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/lib/_stream_writable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/admin.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/after/test/after-test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/after/test/after-test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/test/fixtures/agent1-cert.pem" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/test/fixtures/agent1-cert.pem" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/test/fixtures/agent1-key.pem" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/test/fixtures/agent1-key.pem" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/aggregate/aggregate.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/aggregate.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/collection/aggregation.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/aggregation_cursor.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/express/connection-sharing/app.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/debug/example/app.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/examples/fileapi/public/app.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/examples/fileapi/public/app.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/lib/application.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/schema/array.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/types/array.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/test/autobahn-server.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/test/autobahn-server.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/test/autobahn.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/test/autobahn.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/xmlhttprequest/autotest.watchr" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/connection/base.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/base64-arraybuffer/lib/base64-arraybuffer.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/base64-arraybuffer/lib/base64-arraybuffer.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/base64-arraybuffer/test/base64-arraybuffer_test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/base64-arraybuffer/test/base64-arraybuffer_test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/base64.c" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/win32/base64.c" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/base64.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/win32/base64.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/base64id/lib/base64id.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/commands/base_command.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/sliced/bench.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/drivers/node-mongodb-native/binary.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/lib/bson/binary.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/binary.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/binary.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/lib/bson/binary_parser.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/binding.gyp" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/binding.gyp" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/binding.gyp" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/binding.gyp" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/schema/boolean.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/utf8/bower.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/component-emitter/bower.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/utf8/bower.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/debug/example/browser.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/debug/browser.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mquery/test/collection/browser.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/lib/browser.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/lib/browser.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/lib/browser.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/lib/browser.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/ext/bson.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/ext/bson.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/browser_build/bson.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/lib/bson/bson.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/lib/bson/bson_new.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/schema/buffer.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/types/buffer.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/src/bufferutil.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/src/bufferutil.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/node_modules/isarray/build/build.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/node_modules/isarray/build/build.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/has-binary-data/node_modules/isarray/build/build.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/node_modules/isarray/build/build.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/node_modules/isarray/build/build.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/build_browser.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/builderror.log" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/builderror.log" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/builderror.log" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/builderror.log" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/test/fixtures/ca1-cert.pem" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/test/fixtures/ca1-cert.pem" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/test/fixtures/ca1-key.pem" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/test/fixtures/ca1-key.pem" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/error/cast.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/test/fixtures/certificate.pem" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/test/fixtures/certificate.pem" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/accepts/node_modules/negotiator/lib/charset.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/gridfs/chunk.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/lib/client.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/lib/bson/code.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpromise/.idea/codeStyleSettings.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/collection.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/collection.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mquery/lib/collection/collection.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/command_cursor.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/node_modules/commander/lib/commander.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/node_modules/commander/lib/commander.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/collection/commands.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/collection/batch/common.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/node_modules/isarray/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/type-is/node_modules/mime-types/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/accepts/node_modules/mime-types/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/debug/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/escape-html/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/merge-descriptors/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/path-to-regexp/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/type-is/node_modules/mime-types/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/node_modules/isarray/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/sliced/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/utf8/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/has-binary-data/node_modules/isarray/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/node_modules/emitter/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/node_modules/isarray/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/component-bind/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/component-emitter/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/component-inherit/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/utf8/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/has-cors/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/has-cors/node_modules/global/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/indexof/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/object-component/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/node_modules/emitter/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/node_modules/isarray/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/node_modules/nan/build/config.gypi" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/connection.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/connection/connection.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/connection/connection_pool.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/connection/connection_utils.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/connectionstate.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/contRun.sh" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/collection/core.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/node_modules/json3/coverage/coverage.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/coverage/coverage.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/node_modules/json3/coverage/coverage.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/buffer-crc32/tests/crc.test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/cursor.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/cursorstream.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/type-is/node_modules/mime-types/lib/custom.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/accepts/node_modules/mime-types/lib/custom.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/type-is/node_modules/mime-types/lib/custom.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/schema/date.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/db.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/commands/db_command.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/lib/bson/db_ref.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/debug/debug.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mquery/node_modules/debug/debug.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mquery/node_modules/debug/lib/debug.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/debug/debug.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/debug/lib/debug.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/debug/debug.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/debug/lib/debug.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/commands/delete_command.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/xmlhttprequest/example/demo.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/error/divergentArray.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/doc-methods.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/document.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/schema/documentarray.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/types/documentarray.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/lib/bson/double.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/duplex.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/duplex.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/types/embedded.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/node_modules/emitter/test/emitter.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/node_modules/emitter/test/emitter.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/accepts/node_modules/negotiator/lib/encoding.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpromise/.idea/encodings.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/lib/engine.io.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/engine.io.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mquery/lib/env.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mquery/test/env.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/error.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/node_modules/tinycolor/example.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parsejson/node_modules/better-assert/example.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parseqs/node_modules/better-assert/example.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/node_modules/tinycolor/example.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/parseuri/node_modules/better-assert/example.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/lib/express.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/float.patch" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/node_modules/core-util-is/float.patch" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/node_modules/core-util-is/float.patch" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/lib/bson/float_parser.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/utf8/tests/generate-test-data.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/utf8/tests/generate-test-data.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/collection/geo.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/geospatial/geoJSONSchema.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/geospatial/geoJSONexample.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/geospatial/geospatial.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/commands/get_more_command.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/tools/gleak.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/gridfs/grid.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/base64-arraybuffer/grunt.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/base64-arraybuffer/grunt.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/globalschemas/gs_example.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/connection/repl_set/ha.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/hooks/hooks.alt.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/hooks/hooks.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/test/hybi-common.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/test/hybi-common.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/node_modules/nan/include_dirs.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/ms/test/index.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/utf8/coverage/index.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/utf8/coverage/utf8.js/index.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/utf8/tests/index.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/examples/fileapi/public/index.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/examples/serverstats-express_3/public/index.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/examples/serverstats/public/index.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/coverage/lcov-report/index.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/coverage/lcov-report/lib/index.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/coverage/lcov-report/socket.io-client/index.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/coverage/lcov-report/socket.io-client/lib/index.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/utf8/coverage/index.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/utf8/coverage/utf8.js/index.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/utf8/tests/index.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/has-cors/node_modules/global/test/index.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/examples/fileapi/public/index.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/examples/serverstats-express_3/public/index.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/examples/serverstats/public/index.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/coverage/lcov-report/socket.io-client/index.js.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/coverage/lcov-report/socket.io-client/lib/index.js.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/node_modules/isarray/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/node_modules/string_decoder/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/stream-counter/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/qs/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/type-is/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/type-is/node_modules/media-typer/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/type-is/node_modules/mime-types/lib/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/lib/router/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/accepts/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/accepts/node_modules/mime-types/lib/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/buffer-crc32/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/cookie/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/cookie-signature/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/debug/node_modules/ms/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/depd/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/escape-html/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/finalhandler/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/fresh/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/media-typer/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/merge-descriptors/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/methods/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/parseurl/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/path-to-regexp/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/proxy-addr/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/qs/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/range-parser/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/node_modules/finished/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/node_modules/finished/node_modules/ee-first/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/node_modules/ms/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/serve-static/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/type-is/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/type-is/node_modules/mime-types/lib/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/utils-merge/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/vary/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/schema/storing-schemas-as-json/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/schema/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/types/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/collection/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/ext/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/lib/bson/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/node_modules/isarray/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/node_modules/string_decoder/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpath/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpath/lib/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpath/test/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpromise/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mquery/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mquery/lib/collection/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mquery/node_modules/debug/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mquery/test/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/muri/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/muri/lib/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/muri/test/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/regexp-clone/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/regexp-clone/test/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/sliced/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/sliced/test/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/lib/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/debug/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/lib/transports/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/debug/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/lib/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/after/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/arraybuffer.slice/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/blob/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/blob/test/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/node_modules/commander/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/has-binary-data/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/has-binary-data/node_modules/isarray/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/node_modules/emitter/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/node_modules/isarray/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/lib/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/component-bind/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/component-emitter/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/lib/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/lib/transports/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/component-inherit/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/lib/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/after/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/arraybuffer.slice/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/blob/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/blob/test/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/has-cors/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/has-cors/node_modules/global/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parsejson/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parsejson/node_modules/better-assert/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parsejson/node_modules/better-assert/node_modules/callsite/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parseqs/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parseqs/node_modules/better-assert/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parseqs/node_modules/better-assert/node_modules/callsite/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/node_modules/commander/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/indexof/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/object-component/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/parseuri/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/parseuri/node_modules/better-assert/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/parseuri/node_modules/better-assert/node_modules/callsite/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/to-array/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/node_modules/emitter/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/node_modules/isarray/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/component-inherit/test/inherit.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/node_modules/inherits/inherits.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/node_modules/inherits/inherits.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/node_modules/inherits/inherits_browser.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/node_modules/inherits/inherits_browser.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/lib/middleware/init.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/commands/insert_command.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/internal.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/proxy-addr/node_modules/ipaddr.js/src/ipaddr.coffee" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/proxy-addr/node_modules/ipaddr.js/lib/ipaddr.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/proxy-addr/node_modules/ipaddr.js/ipaddr.min.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/proxy-addr/node_modules/ipaddr.js/test/ipaddr.test.coffee" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/tools/jasmine-1.1.0/jasmine-html.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/tools/jasmine-1.1.0/jasmine.css" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/tools/jasmine-1.1.0/jasmine.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/ms/test/support/jquery.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpromise/.idea/jsLibraryMappings.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/node_modules/json3/coverage/lcov-report/lib/json3.js.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/node_modules/json3/coverage/lcov-report/lib/json3.js.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/node_modules/json3/lib/json3.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/node_modules/json3/lib/json3.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/node_modules/json3/lib/json3.min.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/node_modules/json3/lib/json3.min.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/kerberos.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/win32/kerberos.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/kerberos.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/win32/kerberos.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/kerberos.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/kerberos_context.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/kerberos_context.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/win32/kerberos_sspi.c" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/win32/kerberos_sspi.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/test/kerberos_tests.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/test/kerberos_win32_test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/kerberosgss.c" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/kerberosgss.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/test/fixtures/key.pem" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/test/fixtures/key.pem" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/lib/keys.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/lib/keys.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/commands/kill_cursor_command.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/accepts/node_modules/negotiator/lib/language.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/latest" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/lib/router/layer.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/node_modules/json3/coverage/lcov.info" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/coverage/lcov.info" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/node_modules/json3/coverage/lcov.info" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/lean/lean.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/lib/bson/long.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/coverage/lcov-report/socket.io-client/lib/manager.js.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/lib/manager.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/mapreduce/mapreduce.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/lib/router/match.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/lib/bson/max_key.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/accepts/node_modules/negotiator/lib/mediaType.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/error/messages.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/methods/test/methods.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/node_modules/mime/mime.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/type-is/node_modules/mime-types/lib/mime.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/accepts/node_modules/mime-types/lib/mime.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/type-is/node_modules/mime-types/lib/mime.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/node_modules/mime/types/mime.types" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/lib/bson/min_key.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpromise/.idea/misc.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/error/missingSchema.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/schema/mixed.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/has-cors/node_modules/global/test/mocha.css" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/has-cors/node_modules/global/test/mocha.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/model.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/express/connection-sharing/modelA.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpromise/.idea/modules.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mquery/test/collection/mongo.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/mongo_client.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/responses/mongo_reply.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/auth_processes/mongodb.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/auth/mongodb_cr.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/auth/mongodb_gssapi.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/auth/mongodb_plain.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/auth/mongodb_sspi.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/auth/mongodb_x509.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/connection/mongos.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpromise/.idea/mpromise.iml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mquery/lib/mquery.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/ms/ms.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/lib/namespace.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/node_modules/nan/nan.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/node_modules/nan/nan.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/node_modules/nan/nan.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/accepts/node_modules/negotiator/lib/negotiator.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/debug/node.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mquery/lib/collection/node.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mquery/test/collection/node.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/type-is/node_modules/mime-types/lib/node.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/accepts/node_modules/mime-types/lib/node.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/type-is/node_modules/mime-types/lib/node.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/node_modules/mime/types/node.types" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/schema/number.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/object-component/test/object.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/drivers/node-mongodb-native/objectid.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/schema/objectid.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/types/objectid.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/lib/bson/objectid.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/coverage/lcov-report/socket.io-client/lib/on.js.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/lib/on.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/connection/repl_set/options.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/node_modules/options/lib/options.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/node_modules/options/lib/options.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/node_modules/options/test/options.test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/node_modules/options/test/options.test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpromise/.idea/other.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/error/overwriteModel.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/node_modules/core-util-is/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/node_modules/inherits/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/node_modules/isarray/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/node_modules/string_decoder/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/stream-counter/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/qs/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/type-is/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/type-is/node_modules/media-typer/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/type-is/node_modules/mime-types/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/accepts/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/accepts/node_modules/mime-types/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/accepts/node_modules/negotiator/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/buffer-crc32/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/cookie/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/cookie-signature/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/debug/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/debug/node_modules/ms/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/depd/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/escape-html/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/finalhandler/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/fresh/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/media-typer/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/merge-descriptors/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/methods/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/parseurl/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/path-to-regexp/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/proxy-addr/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/proxy-addr/node_modules/ipaddr.js/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/qs/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/range-parser/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/node_modules/finished/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/node_modules/finished/node_modules/ee-first/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/node_modules/mime/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/node_modules/ms/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/serve-static/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/type-is/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/type-is/node_modules/mime-types/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/utils-merge/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/vary/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/http/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/aggregate/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/express/connection-sharing/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/geospatial/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/lean/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/mapreduce/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/promises/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/querybuilder/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/replicasets/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/hooks/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/browser_build/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/node_modules/nan/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/node_modules/core-util-is/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/node_modules/inherits/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/node_modules/isarray/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/node_modules/string_decoder/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpath/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpromise/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mquery/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mquery/node_modules/debug/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/ms/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/muri/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/regexp-clone/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/sliced/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/debug/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/base64id/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/debug/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/after/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/arraybuffer.slice/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/base64-arraybuffer/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/blob/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/utf8/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/examples/fileapi/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/examples/serverstats/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/examples/serverstats-express_3/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/node_modules/commander/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/node_modules/nan/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/node_modules/options/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/node_modules/tinycolor/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/has-binary-data/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/has-binary-data/node_modules/isarray/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/node_modules/emitter/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/node_modules/isarray/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/node_modules/json3/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/component-bind/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/component-emitter/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/component-inherit/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/after/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/arraybuffer.slice/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/base64-arraybuffer/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/blob/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/utf8/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/has-cors/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/has-cors/node_modules/global/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parsejson/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parsejson/node_modules/better-assert/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parsejson/node_modules/better-assert/node_modules/callsite/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parseqs/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parseqs/node_modules/better-assert/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parseqs/node_modules/better-assert/node_modules/callsite/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/examples/fileapi/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/examples/serverstats/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/examples/serverstats-express_3/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/node_modules/commander/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/node_modules/nan/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/node_modules/options/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/node_modules/tinycolor/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/xmlhttprequest/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/indexof/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/object-component/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/parseuri/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/parseuri/node_modules/better-assert/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/parseuri/node_modules/better-assert/node_modules/callsite/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/to-array/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/node_modules/emitter/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/node_modules/isarray/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/node_modules/json3/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/bench/parser.benchmark.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/bench/parser.benchmark.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/passthrough.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/passthrough.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mquery/lib/permissions.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/aggregate/person.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/geospatial/person.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/globalschemas/person.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/lean/person.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/mapreduce/person.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/promises/person.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/querybuilder/person.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/replicasets/person.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/statics/person.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/connection/repl_set/strategies/ping_strategy.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/lib/transports/polling-jsonp.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/lib/transports/polling-jsonp.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/lib/transports/polling-xhr.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/lib/transports/polling-xhr.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/lib/transports/polling.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/lib/transports/polling.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/population/population-across-three-collections.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/population/population-basic.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/population/population-of-existing-doc.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/population/population-of-multiple-existing-docs.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/population/population-options.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/population/population-plain-objects.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/utf8/coverage/prettify.css" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/node_modules/json3/coverage/lcov-report/prettify.css" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/coverage/lcov-report/prettify.css" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/utf8/coverage/prettify.css" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/node_modules/json3/coverage/lcov-report/prettify.css" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/utf8/coverage/prettify.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-adapter/node_modules/socket.io-parser/node_modules/json3/coverage/lcov-report/prettify.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/coverage/lcov-report/prettify.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/utf8/coverage/prettify.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-parser/node_modules/json3/coverage/lcov-report/prettify.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpromise/.idea/inspectionProfiles/profiles_settings.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpromise/test/promise.domain.test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/promises/promise.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/promise.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpromise/lib/promise.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpromise/test/promise.test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpromise/test/promises.Aplus.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/lib/middleware/query.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/query.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/collection/query.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/commands/query_command.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/querybuilder/querybuilder.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/queryhelpers.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/querystream.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/connection/read_preference.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/readable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/readable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/accepts/node_modules/negotiator/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/gridfs/readstream.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/release-items.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set_state.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/replicasets/replica-sets.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/lib/request.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/test/fixtures/request.pem" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/test/fixtures/request.pem" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/lib/response.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/lib/router/route.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/express/connection-sharing/routes.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/client/app/template/schedule.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/schema/schema.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/schema.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/schema/storing-schemas-as-json/schema.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/schemadefault.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/schematype.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/scope.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpromise/.idea/scopes/scope_settings.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/win32/wrappers/security_buffer.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/win32/wrappers/security_buffer.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/win32/wrappers/security_buffer.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/win32/wrappers/security_buffer_descriptor.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/win32/wrappers/security_buffer_descriptor.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/win32/wrappers/security_buffer_descriptor.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/test/win32/security_buffer_descriptor_tests.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/test/win32/security_buffer_tests.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/win32/wrappers/security_context.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/win32/wrappers/security_context.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/win32/wrappers/security_context.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/win32/wrappers/security_credentials.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/win32/wrappers/security_credentials.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/win32/wrappers/security_credentials.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/test/win32/security_credentials_tests.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/lib/send.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/bench/sender.benchmark.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/bench/sender.benchmark.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/server.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/connection/server.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/lib/server.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/examples/fileapi/server.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/examples/serverstats/server.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/examples/serverstats-express_3/server.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/examples/fileapi/server.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/examples/serverstats/server.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/examples/serverstats-express_3/server.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/connection/server_capabilities.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/collection/shared.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/arraybuffer.slice/test/slice-buffer.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/arraybuffer.slice/test/slice-buffer.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/sliced/lib/sliced.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/socket.io.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/coverage/lcov-report/socket.io-client/lib/socket.js.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/lib/socket.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/lib/socket.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/lib/socket.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/lib/socket.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/bench/speed.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/bench/speed.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/examples/ssl.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/examples/ssl.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/sspi.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/statemachine.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/static.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/examples/statics/statics.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/connection/repl_set/strategies/statistics_strategy.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/schema/string.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/lib/bson/symbol.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/t" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/xmlhttprequest/tests/test-constants.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/xmlhttprequest/tests/test-events.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/xmlhttprequest/tests/test-exceptions.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/xmlhttprequest/tests/test-headers.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/xmlhttprequest/tests/test-redirect-302.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/xmlhttprequest/tests/test-redirect-303.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/xmlhttprequest/tests/test-redirect-307.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/xmlhttprequest/tests/test-request-methods.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/xmlhttprequest/tests/test-request-protocols.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/node_modules/options/test/fixtures/test.conf" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/node_modules/options/test/fixtures/test.conf" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/node_modules/inherits/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/stream-counter/test/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/path-to-regexp/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/node_modules/finished/node_modules/ee-first/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/node_modules/mime/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/hooks/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/node_modules/inherits/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/ms/test/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/has-binary-data/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/has-cors/node_modules/global/test/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parsejson/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/parseqs/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/parseuri/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/stream-counter/test/test.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/xmlhttprequest/tests/testdata.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/utf8/tests/tests.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/utf8/tests/tests.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/test/testserver.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/test/testserver.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/test/fixtures/textfile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/test/fixtures/textfile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/client/app/template/timeline.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/lib/bson/timestamp.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/node_modules/tinycolor/tinycolor.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/node_modules/tinycolor/tinycolor.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/transform.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/transform.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/lib/transport.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/lib/transport.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/commands/update_command.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/examples/fileapi/public/uploader.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/examples/fileapi/public/uploader.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/coverage/lcov-report/lib/url.js.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/coverage/lcov-report/socket.io-client/lib/url.js.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/lib/url.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/connection/url_parser.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/utf8/coverage/utf8.js/utf8.js.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/utf8/coverage/utf8.js/utf8.js.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/utf8/utf8.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/utf8/utf8.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/node_modules/core-util-is/util.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/node_modules/core-util-is/lib/util.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/node_modules/core-util-is/util.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/node_modules/core-util-is/lib/util.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/bench/util.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/bench/util.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/lib/utils.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/node_modules/send/lib/utils.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/utils.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/lib/mongodb/utils.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mquery/lib/utils.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mquery/test/utils.test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/v8.log" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/v8.result" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/src/validation.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/src/validation.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/error/validation.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/error/validator.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpromise/.idea/vcs.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/error/version.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/express/lib/view.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/lib/virtualtype.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/website.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/lib/transports/websocket.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/lib/transports/websocket.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/debug/example/wildcards.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/worker.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/win32/worker.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/worker.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/win32/worker.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/debug/example/worker.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mpromise/.idea/workspace.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/connect-multiparty/node_modules/multiparty/node_modules/readable-stream/writable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/readable-stream/writable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/doc/ws.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/doc/ws.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/.bin/wscat.cmd" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/.bin/wscat.cmd" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/.bin/wscat" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/ws/bin/wscat" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/.bin/wscat" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/bin/wscat" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/mongoose/node_modules/mongodb/node_modules/bson/ext/wscript" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/engine.io/node_modules/engine.io-parser/node_modules/utf8/x.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/engine.io-parser/node_modules/utf8/x.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/server/node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/lib/xmlhttprequest.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/client/app/index.html" afterPath="$PROJECT_DIR$/client/app/index.html" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/client/app/package.json" afterPath="$PROJECT_DIR$/client/app/package.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/client/app/script.js" afterPath="$PROJECT_DIR$/client/app/script.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/.idea/workspace.xml" afterPath="$PROJECT_DIR$/.idea/workspace.xml" />
    </list>
    <ignored path="PineTree.iws" />
    <ignored path=".idea/workspace.xml" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager" flattened_view="true" show_ignored="false" />
  <component name="CreatePatchCommitExecutor">
    <option name="PATCH_PATH" value="" />
  </component>
  <component name="DaemonCodeAnalyzer">
    <disable_hints />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="default_target" />
  <component name="FavoritesManager">
    <favorites_list name="PineTree" />
  </component>
  <component name="FileEditorManager">
    <splitter split-orientation="horizontal" split-proportion="0.5">
      <split-first>
        <leaf>
          <file leaf-file-name="index.html" pinned="false" current="false" current-in-tab="false">
            <entry file="file://$PROJECT_DIR$/client/app/index.html">
              <provider selected="true" editor-type-id="text-editor">
                <state vertical-scroll-proportion="-6.107143" vertical-offset="0" max-vertical-offset="2261">
                  <caret line="9" column="25" selection-start-line="9" selection-start-column="25" selection-end-line="9" selection-end-column="25" />
                  <folding />
                </state>
              </provider>
            </entry>
          </file>
          <file leaf-file-name="script.js" pinned="false" current="true" current-in-tab="true">
            <entry file="file://$PROJECT_DIR$/client/app/script.js">
              <provider selected="true" editor-type-id="text-editor">
                <state vertical-scroll-proportion="0.65211266" vertical-offset="1836" max-vertical-offset="2546">
                  <caret line="121" column="46" selection-start-line="121" selection-start-column="46" selection-end-line="121" selection-end-column="46" />
                  <folding />
                </state>
              </provider>
            </entry>
          </file>
        </leaf>
      </split-first>
      <split-second>
        <leaf>
          <file leaf-file-name="server.js" pinned="false" current="false" current-in-tab="true">
            <entry file="file://$PROJECT_DIR$/server/server.js">
              <provider selected="true" editor-type-id="text-editor">
                <state vertical-scroll-proportion="-0.7259684" vertical-offset="1304" max-vertical-offset="2223">
                  <caret line="42" column="38" selection-start-line="42" selection-start-column="38" selection-end-line="42" selection-end-column="38" />
                  <folding />
                </state>
              </provider>
            </entry>
          </file>
        </leaf>
      </split-second>
    </splitter>
  </component>
  <component name="FindManager">
    <FindUsagesManager>
      <setting name="OPEN_NEW_TAB" value="true" />
    </FindUsagesManager>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="changedFiles">
      <list>
        <option value="$PROJECT_DIR$/client/pinetree/app/index.html" />
        <option value="$PROJECT_DIR$/client/pinetree/app/package.json" />
        <option value="$PROJECT_DIR$/client/app/package.json" />
        <option value="$PROJECT_DIR$/client/app/packaged/css/semantic.css" />
        <option value="$PROJECT_DIR$/server/server/server.js" />
        <option value="$PROJECT_DIR$/server/server.js" />
        <option value="$PROJECT_DIR$/client/app/index.html" />
        <option value="$PROJECT_DIR$/client/app/template/timeline.html" />
        <option value="$PROJECT_DIR$/client/app/css/layout.css" />
        <option value="$PROJECT_DIR$/client/app/template/schedule.html" />
        <option value="$PROJECT_DIR$/client/app/script.js" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds">
    <option name="x" value="-8" />
    <option name="y" value="-8" />
    <option name="width" value="1936" />
    <option name="height" value="1056" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="false">
    <OptionsSetting value="true" id="Add" />
    <OptionsSetting value="true" id="Remove" />
    <OptionsSetting value="true" id="Checkout" />
    <OptionsSetting value="true" id="Update" />
    <OptionsSetting value="true" id="Status" />
    <OptionsSetting value="true" id="Edit" />
    <ConfirmationsSetting value="2" id="Add" />
    <ConfirmationsSetting value="0" id="Remove" />
  </component>
  <component name="ProjectReloadState">
    <option name="STATE" value="0" />
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
    </navigator>
    <panes>
      <pane id="Scope" />
      <pane id="ProjectPane">
        <subPane>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="PineTree" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="PineTree" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="PineTree" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="PineTree" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="PineTree" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="server" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="PineTree" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="PineTree" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="client" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="PineTree" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="PineTree" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="client" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="app" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
        </subPane>
      </pane>
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="DefaultHtmlFileTemplate" value="Html5" />
    <property name="FullScreen" value="false" />
    <property name="recentsLimit" value="5" />
    <property name="restartRequiresConfirmation" value="true" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="E:\2shot\PineTree\client\app\template" />
      <recent name="E:\2shot\PineTree\server" />
      <recent name="E:\2shot\PineTree\client" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="E:\2shot\PineTree\server" />
    </key>
  </component>
  <component name="RunManager" selected="Node.js.server.js">
    <configuration default="false" name="server.js" type="NodeJSConfigurationType" factoryName="Node.js" temporary="true" path-to-node="C:/Program Files/nodejs/node" path-to-js-file="server.js" working-dir="$PROJECT_DIR$/server">
      <RunnerSettings RunnerId="NodeJS.run" />
      <ConfigurationWrapper RunnerId="NodeJS.run" />
      <method />
    </configuration>
    <configuration default="true" type="DartUnitRunConfigurationType" factoryName="DartUnit">
      <option name="VMOptions" />
      <option name="arguments" />
      <option name="filePath" />
      <option name="scope" value="ALL" />
      <option name="testName" />
      <method />
    </configuration>
    <configuration default="true" type="DartCommandLineRunConfigurationType" factoryName="Dart Command Line Application">
      <option name="VMOptions" />
      <option name="arguments" />
      <option name="filePath" />
      <option name="name" value="Dart" />
      <option name="saveOutputToFile" value="false" />
      <option name="showConsoleOnStdErr" value="false" />
      <option name="showConsoleOnStdOut" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="CucumberJavaScriptRunConfigurationType" factoryName="Cucumber.js">
      <option name="cucumberJsArguments" />
      <option name="executablePath" />
      <option name="filePath" />
      <method />
    </configuration>
    <configuration default="true" type="JavaScriptTestRunnerKarma" factoryName="Karma" config-file="">
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="JSTestDriver:ConfigurationType" factoryName="JsTestDriver">
      <setting name="configLocationType" value="CONFIG_FILE" />
      <setting name="settingsFile" value="" />
      <setting name="serverType" value="INTERNAL" />
      <setting name="preferredDebugBrowser" value="Chrome" />
      <method />
    </configuration>
    <configuration default="true" type="JavascriptDebugType" factoryName="JavaScript Debug">
      <method />
    </configuration>
    <configuration default="true" type="NodeJSConfigurationType" factoryName="Node.js" working-dir="">
      <method />
    </configuration>
    <list size="1">
      <item index="0" class="java.lang.String" itemvalue="Node.js.server.js" />
    </list>
    <recent_temporary>
      <list size="1">
        <item index="0" class="java.lang.String" itemvalue="Node.js.server.js" />
      </list>
    </recent_temporary>
  </component>
  <component name="ShelveChangesManager" show_recycled="false" />
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="a3c7e2ed-d56b-4bc1-b0e9-d3e9a92b986c" name="Default" comment="" />
      <created>1407171636567</created>
      <updated>1407171636567</updated>
    </task>
    <servers />
  </component>
  <component name="TodoView" selected-index="0">
    <todo-panel id="selected-file">
      <are-packages-shown value="false" />
      <are-modules-shown value="false" />
      <flatten-packages value="false" />
      <is-autoscroll-to-source value="false" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="false" />
      <are-modules-shown value="false" />
      <flatten-packages value="false" />
      <is-autoscroll-to-source value="false" />
    </todo-panel>
    <todo-panel id="default-changelist">
      <are-packages-shown value="false" />
      <are-modules-shown value="false" />
      <flatten-packages value="false" />
      <is-autoscroll-to-source value="false" />
    </todo-panel>
  </component>
  <component name="ToolWindowManager">
    <frame x="-8" y="-8" width="1936" height="1056" extended-state="1" />
    <editor active="true" />
    <layout>
      <window_info id="Changes" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32959327" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.20194384" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32864866" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.10590095" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="2" side_tool="true" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="7" side_tool="true" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.36324325" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="SLIDING" type="SLIDING" visible="false" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
    </layout>
  </component>
  <component name="Vcs.Log.UiProperties">
    <option name="RECENTLY_FILTERED_USER_GROUPS">
      <collection />
    </option>
    <option name="RECENTLY_FILTERED_BRANCH_GROUPS">
      <collection />
    </option>
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="myTodoPanelSettings">
      <TodoPanelSettings />
    </option>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/server/server.js">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="1527" max-vertical-offset="2223">
          <caret line="42" column="38" selection-start-line="42" selection-start-column="38" selection-end-line="42" selection-end-column="38" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/server/server.js">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="407" max-vertical-offset="2223">
          <caret line="26" column="42" selection-start-line="26" selection-start-column="42" selection-end-line="26" selection-end-column="42" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/client/package.json">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="551">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/server/server.js">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="-0.7259684" vertical-offset="1304" max-vertical-offset="2223">
          <caret line="42" column="38" selection-start-line="42" selection-start-column="38" selection-end-line="42" selection-end-column="38" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/client/app/index.html">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="-6.107143" vertical-offset="0" max-vertical-offset="2261">
          <caret line="9" column="25" selection-start-line="9" selection-start-column="25" selection-end-line="9" selection-end-column="25" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/client/app/script.js">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.65211266" vertical-offset="1836" max-vertical-offset="2546">
          <caret line="121" column="46" selection-start-line="121" selection-start-column="46" selection-end-line="121" selection-end-column="46" />
          <folding />
        </state>
      </provider>
    </entry>
  </component>
</project>

